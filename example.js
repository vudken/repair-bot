const {
  Telegraf,
  Markup,
  Scenes,
  session
} = require("telegraf");
require('dotenv').config();
 

 
const getInvoice = (id) => {
  const invoice = {
    chat_id: id,
    provider_token: process.env.PROVIDER_TOKEN,
    start_parameter: 'get_access',
    title: 'lala',
    description: '–û–ø–ª–∞—Ç–∞ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–µ',
    currency: 'RUB',
    prices: [{
      label: '–û–ø–ª–∞—Ç–∞ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–µ',
      amount: 100 * 120
    }],
    payload: {
      unique_id: `${id}_${Number(new Date())}`,
      provider_token: process.env.PROVIDER_TOKEN
    }
  }
  return invoice
}
 
 
const bowlingGame = new Scenes.BaseScene('bowling_game');
 
bowlingGame.enter(async(ctx) => {
  ctx.session.bowlingGame = {};
  ctx.session.bowlingGame.score = 6;
  await ctx.replyWithInvoice(getInvoiceBowling(ctx.from.id));
});
 
bowlingGame.on('forward_from', async(ctx) => {
  await ctx.reply(`–¢—ã –ø—ã—Ç–∞–ª—Å—è –º–µ–Ω—è –æ–±–º–∞–Ω—É—Ç—å, –∑–∞ —ç—Ç–æ —è –∑–∞–±–∏—Ä–∞—é —Ç–≤–æ–∏ –¥–µ–Ω—å–≥–∏ –∏ –ø—Ä–µ–∫—Ä–∞—â–∞—é –∏–≥—Ä—É. –ù–∞–∂–º–∏ \/start –µ—Å–ª–∏ –∏—Å–ø—Ä–∞–≤–∏–ª—Å—è –∏ —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞.`);
  await ctx.scene.leave();
});
 
bowlingGame.on('successful_payment', async (ctx) => {
  ctx.session.bowlingGame.power = true;
  ctx.session.bowlingGame.balance = 12000;
  await ctx.reply(`–¢–µ–ø–µ—Ä—å –±—Ä–æ—Å—å –º–Ω–µ üé≤`);
});
 
bowlingGame.on('dice', async(ctx) => {
  if (ctx.session.bowlingGame.score <= 0) {
    await bot.telegram.sendMessage('-1001620890074', `–ò–≥—Ä–∞ –≤ –∫–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Ç–∞–∫–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º\n ${ctx.message.from.id} ${ctx.message.from.first_name} ${ctx.session.bowlingGame.balance}`);
    await ctx.reply(`–£–≤—ã, —Ç—ã –∫–∏–Ω—É–ª –∫–æ—Å—Ç–∏ 6 —Ä–∞–∑ - –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n\/money - –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã –≤—ã–∏–≥—Ä—ã—à–∞ –∏–ª–∏ –æ—Å—Ç–∞—Ç–∫–∞ \n\/start - –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã`);
    await ctx.scene.leave();
  } else if (ctx.message.dice.emoji === 'üé≤' && ctx.message.dice.value != '6' && ctx.session.bowlingGame.power === true) {
    ctx.session.bowlingGame.score = ctx.session.bowlingGame.score - 1;
    ctx.session.bowlingGame.balance = ctx.session.bowlingGame.balance - 2000;
    await ctx.reply(`–£–≤—ã, —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª. –¢–≤–æ–π –±–∞–ª–∞–Ω—Å - ${ctx.session.bowlingGame.balance} —Å—É–º.`)
  } else if (ctx.message.dice.emoji === 'üé≤' && ctx.message.dice.value == '6' && ctx.session.bowlingGame.power === true) {
    ctx.session.bowlingGame.score = ctx.session.bowlingGame.score - 1;
    ctx.session.bowlingGame.balance = ctx.session.bowlingGame.balance + 6000;
    await ctx.reply(`–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã –≤—ã–∏–≥—Ä–∞–ª! –¢–≤–æ–π –±–∞–ª–∞–Ω—Å - ${ctx.session.bowlingGame.balance} —Å—É–º. –ü–æ–ø—Ä–æ–±—É–π –≤—ã–∏–≥—Ä–∞—Ç—å –±–æ–ª—å—à–µ`)
  } else if (ctx.session.bowlingGame.power === false) {
    return ctx.reply(`–°–Ω–∞—á–∞–ª–∞ –ø–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å, –∞ –ø–æ—Ç–æ–º –∫–∏–¥–∞–π üé≤`);
  } else {
    return ctx.reply(`–ú—ã –∏–≥—Ä–∞–µ–º –≤ –∫–æ—Å—Ç–∏ –∏–ª–∏ –≤ "–∞ –¥–∞–≤–∞–π —è –∫–∏–Ω—É —Ç–µ–±–µ –∫–∞–∫–æ–µ-–Ω–∏–±—É–¥—å –≥–æ–≤–Ω–æ"?\n–ö–∏–¥–∞–π üé≤`);
  }
});

const bot = new Telegraf(process.env.BOT_TOKEN);

const stage = new Scenes.Stage([bowlingGame]);
 
bot.use(Telegraf.log());
bot.use(session());
bot.use(stage.middleware());
 
bot.command('start', async (ctx) => {
  return ctx.replyWithHTML('<b>–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç, –≤ –Ω—ë–º —è –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—é –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–æ–∏—Ö —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–æ–≤\n\n–í–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /game –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏ –∏–ª–∏ –¥–∞—Ä—Ç—Å</b>')
});
 
bot.command('game', async (ctx) => {
  return ctx.reply('–ù—É —á—Ç–æ –∂–µ, –≤—ã–±–∏—Ä–∞–π –∏–≥—Ä—É', Markup.inlineKeyboard([
    Markup.button.callback('üé≥ –ë–æ—É–ª–∏–Ω–≥', 'bowling_action')
  ]))
});
 
 
bot.action('bowling_action', async (ctx) => {
  return ctx.scene.enter('bowling_game')
});

bot.on('pre_checkout_query', async (ctx) => {
  return ctx.answerPreCheckoutQuery(true)
});
 
// –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ webhook
 
bot.launch();
 
// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))

process.once('SIGTERM', () => bot.stop('SIGTERM'))
